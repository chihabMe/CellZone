// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  username String?
  role     String    @default("user")
  password String?
  Product  Product[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @default(now()) @updatedAt
  LikedProducts Product[] @relation(name: "LikedBy")

  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Cart          Cart?
  Order         Order[]
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Product {
  id              String      @id @default(cuid())
  name            String
  slug            String      @unique
  price           Decimal
  quantity        Int
  description     String
  batteryCapacity Int         @default(1000)
  screenType      String      @default("LCD")
  screenSize      Int         @default(6)
  memory          Int         @default(4)
  capacity        Int         @default(64)
  image           String
  user            User        @relation(fields: [userId], references: [id])
  userId          String
  category        Category    @relation(fields: [categoryId], references: [id])
  categoryId      String
  LikedBy         User[]      @relation(name: "LikedBy")
  isFeatured      Boolean     @default(false)
  isPopular       Boolean     @default(false)
  isBestseller    Boolean     @default(false)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @default(now()) @updatedAt
  ProductMark     ProductMark @relation(fields: [productMarkId], references: [id])
  productMarkId   String
  cartItem        CartItem[]
  OrderItem       OrderItem[]
}

model ProductMark {
  id        String    @id @default(cuid())
  name      String
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model ProductImages {
  id        String   @id @default(cuid())
  image     String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Category {
  id        String    @id @default(cuid())
  name      String
  image     String
  Products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now()) @updatedAt
}

model Cart {
  id     String     @id @default(cuid())
  user   User       @relation(fields: [userId], references: [id])
  userId String     @unique
  items  CartItem[]
}

model CartItem {
  id        String  @id @default(cuid())
  product   Product @relation(fields: [productId], references: [id])
  productId String
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String
}

model Order {
  id        String      @id @default(cuid())
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  items     OrderItem[]
  total     Decimal
  status    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
}

model OrderItem {
  id        String   @id @default(cuid())
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  quantity  Int
  price     Decimal
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}
